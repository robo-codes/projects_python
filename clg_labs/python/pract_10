#10.1Create following regular polygons (regular means all sides the same lengths, all angles the same) using for loop in turtle  An equilateral triangle  A square  A hexagon  An octagon
'''
import turtle
def shape(sides,angle):
    for cont in range(sides):
        turtle.fd(50)
        turtle.rt(angle)
sides=int(input("Enter the number of sides the polygon has : "))
angle=360/sides
turtle.reset()
if sides == 3:
    turtle.write("Triangle")
elif sides == 4:
    turtle.write("Square")
elif sides == 6:
    turtle.write("Hexagon")
else:
    turtle.write("Octagon")
turtle.color("Red")
turtle.begin_fill()
shape(sides,angle)
turtle.end_fill()
turtle.exitonclick()
'''

#10.2 Draw Counter clock wise circle using iterations
'''
import turtle as t
t.reset()
t.color("black")
t.write("                                                                       Counter clock wise circle.")
t.speed(0)
t.color("red")
for angle in range(0,360,20):
    t.seth(angle)
    t.circle(100)
t.exitonclick()
'''

#10.3 Draw circle and triangle shapes using Turtle and fill them with red color
'''
import turtle as t
t.color("Red")
t.write("          circle")
t.begin_fill()
t.circle(50)
t.end_fill()
def shape(sides,angle):
    for cont in range(sides):
        t.lt(angle)
        t.fd(100)
angle=360/3
t.color("White")
t.forward(200)
t.color("Red")
t.write("      triangle")
t.begin_fill()
shape(3,angle)
t.end_fill()
t.exitonclick()
'''

#10.4 Write a program to draw star using Turtle Programming
'''
import turtle as t
def star(size,color):
    count=0
    angle=144
    t.color(color)
    t.begin_fill()
    for _ in range(5):
        t.fd(size)
        t.rt(angle)
    t.end_fill()
star(150,"Red")
t.exitonclick()
'''

#10.5 Python program to draw spiral square Outside In and Inside Out using Turtle Programming
'''
import turtle as t
wn = t.Screen()
wn.title("Outside-in spiral square.")
skk = t.Turtle()
skk.color("red")
def sqrfunc(size):
    for i in range(4):
        skk.fd(size)
        skk.left(90)
        size = size - 5
sqrfunc(145)
sqrfunc(125)
sqrfunc(105)
sqrfunc(85)
sqrfunc(65)
sqrfunc(45)
sqrfunc(25)
t.exitonclick()
'''
'''
import turtle as t
wn = t.Screen()
wn.title("Inside-out spiral square.")
skk = t.Turtle()
skk.color("red")
def sqrfunc(size):
    for i in range(4):
        skk.fd(size)
        skk.left(90)
        size = size + 5
sqrfunc(5)
sqrfunc(25)
sqrfunc(45)
sqrfunc(65)
sqrfunc(85)
sqrfunc(105)
sqrfunc(125)
sqrfunc(145)
t.exitonclick()
'''

#10.6 Python program to draw spiral Helix pattern using Turtle Programming
'''
import turtle as t
loadWindow = t.Screen()
loadWindow.title("Helix pattern")
t.speed(0)
for i in range(50):
    t.circle(5*i)
    t.circle(-5*i)
    t.left(i)
t.exitonclick()
'''

#10.7 Python program to draw rainbow benzene using Turtle Programming

import turtle
loadWindow = turtle.Screen()
loadWindow.title("Rainbow benzene")
colors = ['red', 'purple', 'blue', 'green', 'orange', 'yellow']
t = turtle.Pen()
turtle.bgcolor('black')
turtle.speed(0)
for x in range(360):
    t.pencolor(colors[x%6])
    t.width(x/100 + 1)
    t.forward(x)
    t.left(69)
turtle.exitonclick()
