#Write a Python program to search a specific value from a given list of values using binary search method.
'''
def binary_search(arr, low, high, x):
	if high >= low:

		mid = (high + low) // 2
		if arr[mid] == x:
			return mid
		elif arr[mid] > x:
			return binary_search(arr, low, mid - 1, x)
		else:
			return binary_search(arr, mid + 1, high, x)
	else:
		return -1

list = []
size = int(input("Enter size of list : "))
for n in range(size):
    numbers = int(input("Enter any real number : "))
    list.append(numbers)
    list.sort()
print('\n\nThe sorted list is : ', list)
x = int(input("\nEnter the number you want to search : "))
result = binary_search(list, 0, size, x)
if result != -1:
    print("Entered element is present at index : ", str(result))
else:
    print("Cannot find the number you asked for !")
'''

#Write a python program to arrange the characters of a given string 'welcome' in an alphabetical order using insertion sort algorithm.
'''
def insertionSort(list):
   for index in range(1,len(list)):
        currentvalue = list[index]
        position = index
        while position > 0 and list[position-1] > currentvalue:
            list[position] = list[position-1]
            position = position-1
            list[position] = currentvalue
list = ["W", "E", "L", "C", "O", "M", "E"]
print("Actual list : ",list)
insertionSort(list)
print("Sorted list : ",list)
'''

#To write a Python Program to perform Selection sort.
'''
def selectionSort(list):
    for i in range(len(list)-1, 0, -1):
        max = 0
        for j in range(1,i+1):
            if list[j] > list[max]:
                max = j
        temp = list[j]
        list[j] = list[max]
        list[max] = temp
list = []
size = int(input("Enter size of list : "))
for n in range(size):
    numbers = int(input("Enter any real number : "))
    list.append(numbers)
selectionSort(list)
print("Sorted list using selection sort : ",list)
'''

#To write a Python Program to perform Merge sort.
'''
def mergeSort(list):
    print("Time to split :",list)
    if len(list)>1:
        mid = len(list)//2
        left_half = list[:mid]
        right_half = list[mid:]
        mergeSort(left_half)
        mergeSort(right_half)
        i = j = k = 0
        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                list[k] = left_half[i]
                i += 1
            else:
                list[k] = right_half[j]
                j += 1
            k += 1
        while i < len(left_half):
            list[k] = left_half[i]
            i += 1
            k += 1
        while j < len(right_half):
            list[k] = right_half[j]
            j += 1
            k += 1
    print("Time to merge :",list)
list = []
size = int(input("Enter size of list : "))
for n in range(size):
    numbers = int(input("Enter any real number : "))
    list.append(numbers)
mergeSort(list)
print(list)
'''

#To write a Python Program to perform bubble sort.

def bubble(list):
    for n in range(len(list)-1, 0, -1):
        for i in range(n):
            if list[i] > list[i + 1]:
                temp = list[i]
                list[i] = list[i + 1]
                list[i + 1] = temp
list = []
size = int(input("Enter size of list : "))
for n in range(size):
    numbers = int(input("Enter any real number : "))
    list.append(numbers)
bubble(list)
print("Sorted list is:",list)
